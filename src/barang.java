
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Smktelkom
 */
public class barang extends javax.swing.JFrame {

    /**
     * Creates new form barang
     */
    public barang(String nama) {
        initComponents();
        kasir.setText(nama);
        SetJam(); SetTanggal();
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nama_barang = new javax.swing.JTextField();
        harga_barang = new javax.swing.JTextField();
        jumlah_barang = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        label_jam = new javax.swing.JLabel();
        kasir = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        label_tanggal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DATA = new javax.swing.JTable();
        Refresh = new javax.swing.JButton();
        id_barang = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        total_beli = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Clear = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        total_harga = new javax.swing.JTextField();
        Refresh1 = new javax.swing.JButton();
        Refresh2 = new javax.swing.JButton();
        cari = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(33, 56, 69));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(40, 119, 130));
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        jLabel1.setText("DATA PEMBELIAN PATRIA STATIONARY");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(260, 10, 360, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 880, 50);
        jPanel1.add(nama_barang);
        nama_barang.setBounds(40, 170, 220, 30);
        jPanel1.add(harga_barang);
        harga_barang.setBounds(40, 230, 220, 30);
        jPanel1.add(jumlah_barang);
        jumlah_barang.setBounds(40, 290, 220, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Total_Harga_Pembelian");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(40, 390, 190, 20);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ID_Barang");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(340, 110, 80, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nama_Barang");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(40, 150, 120, 20);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Harga_Barang");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(40, 210, 120, 20);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(310, 50, 10, 500);

        jButton1.setText("SAVE");
        jButton1.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jButton1AncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(40, 460, 80, 30);

        label_jam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_jam.setForeground(new java.awt.Color(255, 255, 255));
        label_jam.setText("waktu");
        jPanel1.add(label_jam);
        label_jam.setBounds(340, 210, 90, 30);

        kasir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        kasir.setForeground(new java.awt.Color(255, 255, 255));
        kasir.setText("Admin");
        jPanel1.add(kasir);
        kasir.setBounds(420, 180, 90, 10);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nama Kasir :");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(340, 170, 90, 30);

        label_tanggal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_tanggal.setForeground(new java.awt.Color(255, 255, 255));
        label_tanggal.setText("tanggal");
        jPanel1.add(label_tanggal);
        label_tanggal.setBounds(340, 190, 90, 30);

        DATA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id_brg", "nama_brg", "Harga_brg", "Jumlah_brg", "Total_harga"
            }
        ));
        jScrollPane1.setViewportView(DATA);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(340, 250, 480, 120);

        Refresh.setText("Refresh");
        Refresh.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                RefreshAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });
        jPanel1.add(Refresh);
        Refresh.setBounds(550, 390, 80, 30);
        jPanel1.add(id_barang);
        id_barang.setBounds(40, 110, 220, 30);

        jButton3.setText("DEL");
        jButton3.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jButton3AncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(450, 390, 80, 30);

        total_beli.setEnabled(false);
        jPanel1.add(total_beli);
        total_beli.setBounds(40, 350, 220, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Jumlah_Barang");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(40, 270, 120, 20);

        Clear.setText("Clear");
        Clear.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                ClearAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        jPanel1.add(Clear);
        Clear.setBounds(340, 390, 80, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Total_Harga");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(40, 330, 120, 20);

        total_harga.setEnabled(false);
        jPanel1.add(total_harga);
        total_harga.setBounds(40, 410, 220, 30);

        Refresh1.setText("Print");
        Refresh1.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                Refresh1AncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });
        Refresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Refresh1ActionPerformed(evt);
            }
        });
        jPanel1.add(Refresh1);
        Refresh1.setBounds(650, 390, 80, 30);

        Refresh2.setText("Total");
        Refresh2.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                Refresh2AncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });
        Refresh2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Refresh2ActionPerformed(evt);
            }
        });
        jPanel1.add(Refresh2);
        Refresh2.setBounds(750, 390, 80, 30);
        jPanel1.add(cari);
        cari.setBounds(340, 130, 180, 30);

        search.setText("CARI");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel1.add(search);
        search.setBounds(550, 130, 57, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ID_Barang");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(40, 90, 80, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 880, 550);

        setBounds(0, 0, 894, 587);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1AncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jButton1AncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1AncestorMoved

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         if ("".equals(id_barang.getText()) || "".equals(nama_barang.getText()) || "".equals(harga_barang.getText())|| "".equals(jumlah_barang.getText())) {
            JOptionPane.showMessageDialog(this, " Harap Lengkapi Data","Error", JOptionPane.WARNING_MESSAGE);

        }else{
               int ha = Integer.parseInt(String.valueOf(harga_barang.getText()));
               int ju = Integer.parseInt(String.valueOf(jumlah_barang.getText()));
               int total = ha*ju;
               
               total_beli.setText(String.valueOf(total));
               
               
            }
    
            String SQL = "INSERT INTO t_barang(id_barang,nama_barang,harga_barang,jumlah_barang,total_harga)"+
            "VALUES('"+id_barang.getText()+"','"+nama_barang.getText()+"','"+harga_barang.getText()+"','"+jumlah_barang.getText()+"','"+total_beli.getText()+"')";
            int status = KoneksiDB.execute(SQL);
            if (status==1) {
                JOptionPane.showMessageDialog(this,"Data berhasil ditambahkan","Sukses",JOptionPane.INFORMATION_MESSAGE);
                selectdata();
            }
            else{
                JOptionPane.showMessageDialog(this,"Data gagal ditambahkan","Gagal",JOptionPane.WARNING_MESSAGE);
            }
            
       
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void RefreshAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_RefreshAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshAncestorMoved

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
         selectdata(); // TODO add your handling code here:
    }//GEN-LAST:event_RefreshActionPerformed

    private void jButton3AncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jButton3AncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3AncestorMoved

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Anda yakin Menghapus Data!","",JOptionPane.YES_NO_OPTION);
        int baris = DATA.getSelectedRow();
        if (confirm ==0) {
  
        if (baris != -1) {
            String id = DATA.getValueAt(baris, 0).toString();
            String SQL = "DELETE FROM t_barang WHERE id_barang='"+id+"'";
            int status = KoneksiDB.execute(SQL);
            
            if (status==1) {    
                JOptionPane.showMessageDialog(this,"Data Berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            }else {
                JOptionPane.showMessageDialog(this,"Data Gagal dihapus", "Gagal", JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this,"Pilih Baris Data Terlebih Dahulu","Error",JOptionPane.WARNING_MESSAGE);
        }
    }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void ClearAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_ClearAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearAncestorMoved

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        id_barang.setText("");
        nama_barang.setText("");
        harga_barang.setText("");
       
        jumlah_barang.setText("");
        total_beli.setText("");
        total_harga.setText("");
      

        // TODO add your handling code here:
    }//GEN-LAST:event_ClearActionPerformed

    private void Refresh1AncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_Refresh1AncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_Refresh1AncestorMoved

    private void Refresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Refresh1ActionPerformed
         MessageFormat header = new MessageFormat ("Daftar Transaksi Patria Stationary");
        MessageFormat footer = new MessageFormat ("Page {0, number, integer}");
        try{
            DATA.print(JTable.PrintMode.FIT_WIDTH, header, footer, true, null, true, null);
        }catch(java.awt.print.PrinterException e)
                {
            System.err.format("Cannot Prnt %s%n", e.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Refresh1ActionPerformed

    private void Refresh2AncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_Refresh2AncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_Refresh2AncestorMoved

    private void Refresh2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Refresh2ActionPerformed
        int jumlahBaris = DATA.getRowCount();
        int totalBiaya = 0;
        int jumlahBarang, hargaBarang;
        TableModel tabelModel;
        tabelModel = DATA.getModel();
        for (int i=0; i<jumlahBaris; i++){
        jumlahBarang = Integer.parseInt(tabelModel.getValueAt(i, 3).toString());
        hargaBarang = Integer.parseInt(tabelModel.getValueAt(i, 2).toString());
        totalBiaya = totalBiaya + (jumlahBarang*hargaBarang);
        }
        if (totalBiaya > 100000) {
            int diskon = totalBiaya*10/100;
            total_harga.setText(String.valueOf(totalBiaya-diskon));
        }else
            total_harga.setText(String.valueOf(totalBiaya));
        

        
                    
        
        // TODO add your handling code here:
    }//GEN-LAST:event_Refresh2ActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        String serach = cari.getText();
        
        String kolom[]={"Id_brg","nama_brg","Harga_brg","Jumlah_brg","Total_harga"};
        DefaultTableModel dtm = new DefaultTableModel(null, kolom);   
        String SQL = "SELECT * FROM t_barang where id_barang='"+serach+"'";
        ResultSet rs = KoneksiDB.executeQuery(SQL);
        try{
            while(rs.next()){
                String id = rs.getString(1);
                String nama = rs.getString(2);
                String harga = rs.getString(3);
                String jumlah = rs.getString(4);
                String total = rs.getString(5);
                    String data[] = {id,nama,harga,jumlah,total};
                    dtm.addRow(data);
            }
             
        }   catch(SQLException ex){
                    Logger.getLogger(barang.class.getName()).log(Level.SEVERE,null, ex);
                    }
            DATA.setModel(dtm); 
        if (DATA.getRowCount()<1) {
             JOptionPane.showMessageDialog(null,"Tidak ada Data");
             selectdata();
             
        }
        else{
            
        }
    }//GEN-LAST:event_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear;
    private javax.swing.JTable DATA;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton Refresh1;
    private javax.swing.JButton Refresh2;
    private javax.swing.JTextField cari;
    private javax.swing.JTextField harga_barang;
    private javax.swing.JTextField id_barang;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jumlah_barang;
    private javax.swing.JLabel kasir;
    private javax.swing.JLabel label_jam;
    private javax.swing.JLabel label_tanggal;
    private javax.swing.JTextField nama_barang;
    private javax.swing.JButton search;
    private javax.swing.JTextField total_beli;
    private javax.swing.JTextField total_harga;
    // End of variables declaration//GEN-END:variables

    private void selectdata() {  
        String kolom[]={"Id_brg","nama_brg","Harga_brg","Jumlah_brg","Total_harga"};
        DefaultTableModel dtm = new DefaultTableModel(null, kolom);   
        String SQL = "SELECT * FROM t_barang";
        ResultSet rs = KoneksiDB.executeQuery(SQL);
        try{
            while(rs.next()){
                String id = rs.getString(1);
                String nama = rs.getString(2);
                String harga = rs.getString(3);
                String jumlah = rs.getString(4);
                String total = rs.getString(5);
                    String data[] = {id,nama,harga,jumlah,total};
                    dtm.addRow(data);
            }
        }   catch(SQLException ex){
                    Logger.getLogger(barang.class.getName()).log(Level.SEVERE,null, ex);
                    }
            DATA.setModel(dtm);            
    
    }

    private void SetJam() {
         ActionListener taskPerformer = new ActionListener(){
        public void actionPerformed(ActionEvent evt){
                String nolh = "";
                String nolm = "";
                String nols = "";
                
                
                Date dt = new Date();
                int vh = dt.getHours();
                int vm = dt.getMinutes();
                int vs = dt.getSeconds();
                
                if (vh<=9){
                    nolh = "0";
                } if (vm <= 9) {
                    nolm = "0";
                } if (vs <= 9){
                    nols = "0";
                }
               
                
                String h = nolh + Integer.toString(vh);
                String m = nolm + Integer.toString(vm);
                String s = nols + Integer.toString(vs);
                label_jam.setText(h+":"+m+":"+s);
            }
    };

   new Timer(100, taskPerformer).start();
}

    private void SetTanggal() {
        java.util.Date now = new java.util.Date();
        java.text.SimpleDateFormat kal = new java.text.SimpleDateFormat("yyy/MM/dd");
        label_tanggal.setText(kal.format(now));
    }

    private void koneksi() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void KoneksiDB() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
 }
